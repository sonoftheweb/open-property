services:
  krakend:
    image: devopsfaith/krakend:watch
    ports:
      - "8080:8080"
    volumes:
      - ./docker/gateway/krakend.json:/etc/krakend/krakend.json
    command: [ "run", "-dc", "/etc/krakend/krakend.json" ]
    networks:
      - op

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    ports:
      - "80:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: [ "bun", "run", "dev" ]
    networks:
      - op

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: ../docker/api/Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./api:/var/www
      - ./docker/api/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - op
    env_file:
      - .env

  api_database:
    container_name: api_database
    image: postgres:latest
    environment:
      POSTGRES_USER: openproperty
      POSTGRES_PASSWORD: password
      POSTGRES_DB: openproperty
    volumes:
      - ./docker/api/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - op

networks:
  op:
    driver: bridge
