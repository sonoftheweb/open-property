services:
  krakend:
    image: devopsfaith/krakend:watch
    ports:
      - "8080:8080"
    volumes:
      - ./docker/gateway/krakend.json:/etc/krakend/krakend.json
    command: ["run", "-dc", "/etc/krakend/krakend.json"]
    networks:
      - op

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    ports:
      - "80:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["bun", "run", "dev"]
    networks:
      - op

  api_nginx:
    build:
      context: .
      dockerfile: ./docker/api/nginx.Dockerfile
    depends_on:
      - api
      - api_database
    container_name: api_nginx
    ports:
      - "8081:8080"
      - "443:443"
    volumes:
      - ./api:/var/www
    networks:
      - op

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./docker/api/php.Dockerfile
    volumes:
      - ./api:/var/www
    networks:
      - op
    env_file:
      - .env

  composer:
    image: composer:latest
    container_name: laravel_composer
    volumes:
      - ./api:/var/www
    working_dir: /var/www
    user: "1000:1000" # Replace with the UID:GID of your local non-root user
    command: sh -c "composer create-project laravel/laravel . && chown -R 1000:1000 /var/www"

  artisan:
    build:
      context: .
      dockerfile: ./docker/api/php.Dockerfile
    container_name: api_artisan
    volumes:
      - ./api:/var/www
    working_dir: /var/www
    depends_on:
      - api_database
    networks:
      - op
    entrypoint: ["php", "artisan"]

  api_database:
    container_name: api_database
    image: postgres:latest
    environment:
      POSTGRES_USER: openproperty
      POSTGRES_PASSWORD: password
      POSTGRES_DB: openproperty
    volumes:
      - ./docker/api/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - op

networks:
  op:
    driver: bridge